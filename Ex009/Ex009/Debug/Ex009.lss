
Ex009.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000122  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000196  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000740  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000064d  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002a6  00000000  00000000  00000fe5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000098  00000000  00000000  0000128c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a1  00000000  00000000  00001324  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000049  00000000  00000000  000016c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000170e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  88:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <RED_LED_ON>:

volatile int int0Count=0; //counting the number of times int0 has occurred
void RED_LED_ON(void){ PORTB |= 0B00100000;} //PORTB bit 5 to 1
void RED_LED_OFF(void){ PORTB |= 0B11011111;} //PORTB bit 5 to 0
void GREEN_LED_ON(void){ PORTB |= 0B00000001;} //PORTB bit 5 to 1
void GREEN_LED_OFF(void){ PORTB |= 0B11111110;} //PORTB bit 5 to 1
  90:	2d 9a       	sbi	0x05, 5	; 5
  92:	08 95       	ret

00000094 <RED_LED_OFF>:
  94:	85 b1       	in	r24, 0x05	; 5
  96:	8f 6d       	ori	r24, 0xDF	; 223
  98:	85 b9       	out	0x05, r24	; 5
  9a:	08 95       	ret

0000009c <GREEN_LED_ON>:
  9c:	28 9a       	sbi	0x05, 0	; 5
  9e:	08 95       	ret

000000a0 <init_timer0_overflow_interrupt>:
	
void init_timer0_overflow_interrupt(void){
	TCNT0=0x00;
  a0:	16 bc       	out	0x26, r1	; 38
	TIMSK0 |= 0x01;
  a2:	ee e6       	ldi	r30, 0x6E	; 110
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	81 60       	ori	r24, 0x01	; 1
  aa:	80 83       	st	Z, r24
	TCCR0A &= 0xFC;
  ac:	84 b5       	in	r24, 0x24	; 36
  ae:	8c 7f       	andi	r24, 0xFC	; 252
  b0:	84 bd       	out	0x24, r24	; 36
	TCCR0B &= 0xF7;
  b2:	85 b5       	in	r24, 0x25	; 37
  b4:	87 7f       	andi	r24, 0xF7	; 247
  b6:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= 0x04;
  b8:	85 b5       	in	r24, 0x25	; 37
  ba:	84 60       	ori	r24, 0x04	; 4
  bc:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= 0xFC;
  be:	85 b5       	in	r24, 0x25	; 37
  c0:	8c 6f       	ori	r24, 0xFC	; 252
  c2:	85 bd       	out	0x25, r24	; 37
  c4:	08 95       	ret

000000c6 <main>:


int main(void)
{
	
    DDRB |= 0b00100001;
  c6:	84 b1       	in	r24, 0x04	; 4
  c8:	81 62       	ori	r24, 0x21	; 33
  ca:	84 b9       	out	0x04, r24	; 4
	GREEN_LED_ON();
  cc:	0e 94 4e 00 	call	0x9c	; 0x9c <GREEN_LED_ON>
	RED_LED_OFF();
  d0:	0e 94 4a 00 	call	0x94	; 0x94 <RED_LED_OFF>
	init_timer0_overflow_interrupt();
  d4:	0e 94 50 00 	call	0xa0	; 0xa0 <init_timer0_overflow_interrupt>
	sei();
  d8:	78 94       	sei
    while (1) 
    {
		if(int0Count >= 1000){
  da:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  de:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
		}
		int0Count=0;
  e2:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
  e6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		RED_LED_ON();
  ea:	0e 94 48 00 	call	0x90	; 0x90 <RED_LED_ON>
  ee:	f5 cf       	rjmp	.-22     	; 0xda <main+0x14>

000000f0 <__vector_16>:
    }
}

ISR(TIMER0_OVF_vect){
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	8f 93       	push	r24
  fc:	9f 93       	push	r25
	int0Count++;
  fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 102:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 106:	01 96       	adiw	r24, 0x01	; 1
 108:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 10c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
}
 110:	9f 91       	pop	r25
 112:	8f 91       	pop	r24
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
