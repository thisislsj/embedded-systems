
LCD_Exercise.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000077a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000706  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000037  00800100  00800100  0000077a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000077a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000007ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018eb  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000876  00000000  00000000  000021bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a3a  00000000  00000000  00002a35  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00003470  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052e  00000000  00000000  00003684  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b58  00000000  00000000  00003bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000470a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__vector_18>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a7 33       	cpi	r26, 0x37	; 55
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 56 03 	call	0x6ac	; 0x6ac <main>
  88:	0c 94 81 03 	jmp	0x702	; 0x702 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pinChange>:
/****************************************************/
/*			Initialize all the hardware				*/
/****************************************************/
void hardwareInit(void)
{
	hardwareInitLCD();
  90:	67 2b       	or	r22, r23
  92:	09 f0       	breq	.+2      	; 0x96 <pinChange+0x6>
  94:	73 c0       	rjmp	.+230    	; 0x17c <pinChange+0xec>
  96:	8a 30       	cpi	r24, 0x0A	; 10
  98:	91 05       	cpc	r25, r1
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0x10>
  9c:	28 98       	cbi	0x05, 0	; 5
  9e:	08 95       	ret
  a0:	8b 30       	cpi	r24, 0x0B	; 11
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x1a>
  a6:	29 98       	cbi	0x05, 1	; 5
  a8:	08 95       	ret
  aa:	8c 30       	cpi	r24, 0x0C	; 12
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x24>
  b0:	2a 98       	cbi	0x05, 2	; 5
  b2:	08 95       	ret
  b4:	8d 30       	cpi	r24, 0x0D	; 13
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2e>
  ba:	2b 98       	cbi	0x05, 3	; 5
  bc:	08 95       	ret
  be:	8e 30       	cpi	r24, 0x0E	; 14
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x38>
  c4:	2c 98       	cbi	0x05, 4	; 5
  c6:	08 95       	ret
  c8:	8f 30       	cpi	r24, 0x0F	; 15
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x42>
  ce:	2d 98       	cbi	0x05, 5	; 5
  d0:	08 95       	ret
  d2:	80 31       	cpi	r24, 0x10	; 16
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4c>
  d8:	2e 98       	cbi	0x05, 6	; 5
  da:	08 95       	ret
  dc:	81 31       	cpi	r24, 0x11	; 17
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x56>
  e2:	2f 98       	cbi	0x05, 7	; 5
  e4:	08 95       	ret
  e6:	84 31       	cpi	r24, 0x14	; 20
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x60>
  ec:	40 98       	cbi	0x08, 0	; 8
  ee:	08 95       	ret
  f0:	85 31       	cpi	r24, 0x15	; 21
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x6a>
  f6:	41 98       	cbi	0x08, 1	; 8
  f8:	08 95       	ret
  fa:	86 31       	cpi	r24, 0x16	; 22
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x74>
 100:	42 98       	cbi	0x08, 2	; 8
 102:	08 95       	ret
 104:	87 31       	cpi	r24, 0x17	; 23
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7e>
 10a:	43 98       	cbi	0x08, 3	; 8
 10c:	08 95       	ret
 10e:	88 31       	cpi	r24, 0x18	; 24
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x88>
 114:	44 98       	cbi	0x08, 4	; 8
 116:	08 95       	ret
 118:	89 31       	cpi	r24, 0x19	; 25
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x92>
 11e:	45 98       	cbi	0x08, 5	; 8
 120:	08 95       	ret
 122:	8a 31       	cpi	r24, 0x1A	; 26
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9c>
 128:	46 98       	cbi	0x08, 6	; 8
 12a:	08 95       	ret
 12c:	8e 31       	cpi	r24, 0x1E	; 30
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa6>
 132:	58 98       	cbi	0x0b, 0	; 11
 134:	08 95       	ret
 136:	8f 31       	cpi	r24, 0x1F	; 31
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xb0>
 13c:	59 98       	cbi	0x0b, 1	; 11
 13e:	08 95       	ret
 140:	80 32       	cpi	r24, 0x20	; 32
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xba>
 146:	5a 98       	cbi	0x0b, 2	; 11
 148:	08 95       	ret
 14a:	81 32       	cpi	r24, 0x21	; 33
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc4>
 150:	5b 98       	cbi	0x0b, 3	; 11
 152:	08 95       	ret
 154:	82 32       	cpi	r24, 0x22	; 34
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xce>
 15a:	5c 98       	cbi	0x0b, 4	; 11
 15c:	08 95       	ret
 15e:	83 32       	cpi	r24, 0x23	; 35
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd8>
 164:	5d 98       	cbi	0x0b, 5	; 11
 166:	08 95       	ret
 168:	84 32       	cpi	r24, 0x24	; 36
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe2>
 16e:	5e 98       	cbi	0x0b, 6	; 11
 170:	08 95       	ret
 172:	85 97       	sbiw	r24, 0x25	; 37
 174:	09 f0       	breq	.+2      	; 0x178 <pinChange+0xe8>
 176:	73 c0       	rjmp	.+230    	; 0x25e <pinChange+0x1ce>
 178:	5f 98       	cbi	0x0b, 7	; 11
 17a:	08 95       	ret
 17c:	8a 30       	cpi	r24, 0x0A	; 10
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf6>
 182:	28 9a       	sbi	0x05, 0	; 5
 184:	08 95       	ret
 186:	8b 30       	cpi	r24, 0x0B	; 11
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0x100>
 18c:	29 9a       	sbi	0x05, 1	; 5
 18e:	08 95       	ret
 190:	8c 30       	cpi	r24, 0x0C	; 12
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x10a>
 196:	2a 9a       	sbi	0x05, 2	; 5
 198:	08 95       	ret
 19a:	8d 30       	cpi	r24, 0x0D	; 13
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x114>
 1a0:	2b 9a       	sbi	0x05, 3	; 5
 1a2:	08 95       	ret
 1a4:	8e 30       	cpi	r24, 0x0E	; 14
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11e>
 1aa:	2c 9a       	sbi	0x05, 4	; 5
 1ac:	08 95       	ret
 1ae:	8f 30       	cpi	r24, 0x0F	; 15
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x128>
 1b4:	2d 9a       	sbi	0x05, 5	; 5
 1b6:	08 95       	ret
 1b8:	80 31       	cpi	r24, 0x10	; 16
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x132>
 1be:	2e 9a       	sbi	0x05, 6	; 5
 1c0:	08 95       	ret
 1c2:	81 31       	cpi	r24, 0x11	; 17
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13c>
 1c8:	2f 9a       	sbi	0x05, 7	; 5
 1ca:	08 95       	ret
 1cc:	84 31       	cpi	r24, 0x14	; 20
 1ce:	91 05       	cpc	r25, r1
 1d0:	11 f4       	brne	.+4      	; 0x1d6 <pinChange+0x146>
 1d2:	40 9a       	sbi	0x08, 0	; 8
 1d4:	08 95       	ret
 1d6:	85 31       	cpi	r24, 0x15	; 21
 1d8:	91 05       	cpc	r25, r1
 1da:	11 f4       	brne	.+4      	; 0x1e0 <pinChange+0x150>
 1dc:	41 9a       	sbi	0x08, 1	; 8
 1de:	08 95       	ret
 1e0:	86 31       	cpi	r24, 0x16	; 22
 1e2:	91 05       	cpc	r25, r1
 1e4:	11 f4       	brne	.+4      	; 0x1ea <pinChange+0x15a>
 1e6:	42 9a       	sbi	0x08, 2	; 8
 1e8:	08 95       	ret
 1ea:	87 31       	cpi	r24, 0x17	; 23
 1ec:	91 05       	cpc	r25, r1
 1ee:	11 f4       	brne	.+4      	; 0x1f4 <pinChange+0x164>
 1f0:	43 9a       	sbi	0x08, 3	; 8
 1f2:	08 95       	ret
 1f4:	88 31       	cpi	r24, 0x18	; 24
 1f6:	91 05       	cpc	r25, r1
 1f8:	11 f4       	brne	.+4      	; 0x1fe <pinChange+0x16e>
 1fa:	44 9a       	sbi	0x08, 4	; 8
 1fc:	08 95       	ret
 1fe:	89 31       	cpi	r24, 0x19	; 25
 200:	91 05       	cpc	r25, r1
 202:	11 f4       	brne	.+4      	; 0x208 <pinChange+0x178>
 204:	45 9a       	sbi	0x08, 5	; 8
 206:	08 95       	ret
 208:	8a 31       	cpi	r24, 0x1A	; 26
 20a:	91 05       	cpc	r25, r1
 20c:	11 f4       	brne	.+4      	; 0x212 <pinChange+0x182>
 20e:	46 9a       	sbi	0x08, 6	; 8
 210:	08 95       	ret
 212:	8e 31       	cpi	r24, 0x1E	; 30
 214:	91 05       	cpc	r25, r1
 216:	11 f4       	brne	.+4      	; 0x21c <pinChange+0x18c>
 218:	58 9a       	sbi	0x0b, 0	; 11
 21a:	08 95       	ret
 21c:	8f 31       	cpi	r24, 0x1F	; 31
 21e:	91 05       	cpc	r25, r1
 220:	11 f4       	brne	.+4      	; 0x226 <pinChange+0x196>
 222:	59 9a       	sbi	0x0b, 1	; 11
 224:	08 95       	ret
 226:	80 32       	cpi	r24, 0x20	; 32
 228:	91 05       	cpc	r25, r1
 22a:	11 f4       	brne	.+4      	; 0x230 <pinChange+0x1a0>
 22c:	5a 9a       	sbi	0x0b, 2	; 11
 22e:	08 95       	ret
 230:	81 32       	cpi	r24, 0x21	; 33
 232:	91 05       	cpc	r25, r1
 234:	11 f4       	brne	.+4      	; 0x23a <pinChange+0x1aa>
 236:	5b 9a       	sbi	0x0b, 3	; 11
 238:	08 95       	ret
 23a:	82 32       	cpi	r24, 0x22	; 34
 23c:	91 05       	cpc	r25, r1
 23e:	11 f4       	brne	.+4      	; 0x244 <pinChange+0x1b4>
 240:	5c 9a       	sbi	0x0b, 4	; 11
 242:	08 95       	ret
 244:	83 32       	cpi	r24, 0x23	; 35
 246:	91 05       	cpc	r25, r1
 248:	11 f4       	brne	.+4      	; 0x24e <pinChange+0x1be>
 24a:	5d 9a       	sbi	0x0b, 5	; 11
 24c:	08 95       	ret
 24e:	84 32       	cpi	r24, 0x24	; 36
 250:	91 05       	cpc	r25, r1
 252:	11 f4       	brne	.+4      	; 0x258 <pinChange+0x1c8>
 254:	5e 9a       	sbi	0x0b, 6	; 11
 256:	08 95       	ret
 258:	85 97       	sbiw	r24, 0x25	; 37
 25a:	09 f4       	brne	.+2      	; 0x25e <pinChange+0x1ce>
 25c:	5f 9a       	sbi	0x0b, 7	; 11
 25e:	08 95       	ret

00000260 <Lcd4_Port>:
 260:	cf 93       	push	r28
 262:	c8 2f       	mov	r28, r24
 264:	80 ff       	sbrs	r24, 0
 266:	07 c0       	rjmp	.+14     	; 0x276 <Lcd4_Port+0x16>
 268:	61 e0       	ldi	r22, 0x01	; 1
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	82 e2       	ldi	r24, 0x22	; 34
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 274:	06 c0       	rjmp	.+12     	; 0x282 <Lcd4_Port+0x22>
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	82 e2       	ldi	r24, 0x22	; 34
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 282:	c1 ff       	sbrs	r28, 1
 284:	07 c0       	rjmp	.+14     	; 0x294 <Lcd4_Port+0x34>
 286:	61 e0       	ldi	r22, 0x01	; 1
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	83 e2       	ldi	r24, 0x23	; 35
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 292:	06 c0       	rjmp	.+12     	; 0x2a0 <Lcd4_Port+0x40>
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	83 e2       	ldi	r24, 0x23	; 35
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 2a0:	c2 ff       	sbrs	r28, 2
 2a2:	07 c0       	rjmp	.+14     	; 0x2b2 <Lcd4_Port+0x52>
 2a4:	61 e0       	ldi	r22, 0x01	; 1
 2a6:	70 e0       	ldi	r23, 0x00	; 0
 2a8:	84 e2       	ldi	r24, 0x24	; 36
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 2b0:	06 c0       	rjmp	.+12     	; 0x2be <Lcd4_Port+0x5e>
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	70 e0       	ldi	r23, 0x00	; 0
 2b6:	84 e2       	ldi	r24, 0x24	; 36
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 2be:	c3 ff       	sbrs	r28, 3
 2c0:	07 c0       	rjmp	.+14     	; 0x2d0 <Lcd4_Port+0x70>
 2c2:	61 e0       	ldi	r22, 0x01	; 1
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	85 e2       	ldi	r24, 0x25	; 37
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 2ce:	06 c0       	rjmp	.+12     	; 0x2dc <Lcd4_Port+0x7c>
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	70 e0       	ldi	r23, 0x00	; 0
 2d4:	85 e2       	ldi	r24, 0x25	; 37
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 2dc:	cf 91       	pop	r28
 2de:	08 95       	ret

000002e0 <Lcd4_Cmd>:
 2e0:	cf 93       	push	r28
 2e2:	c8 2f       	mov	r28, r24
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	8d e0       	ldi	r24, 0x0D	; 13
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 2f0:	8c 2f       	mov	r24, r28
 2f2:	0e 94 30 01 	call	0x260	; 0x260 <Lcd4_Port>
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	8c e0       	ldi	r24, 0x0C	; 12
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 302:	8f e9       	ldi	r24, 0x9F	; 159
 304:	9f e0       	ldi	r25, 0x0F	; 15
 306:	01 97       	sbiw	r24, 0x01	; 1
 308:	f1 f7       	brne	.-4      	; 0x306 <Lcd4_Cmd+0x26>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <Lcd4_Cmd+0x2c>
 30c:	00 00       	nop
 30e:	60 e0       	ldi	r22, 0x00	; 0
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	8c e0       	ldi	r24, 0x0C	; 12
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 31a:	8f e9       	ldi	r24, 0x9F	; 159
 31c:	9f e0       	ldi	r25, 0x0F	; 15
 31e:	01 97       	sbiw	r24, 0x01	; 1
 320:	f1 f7       	brne	.-4      	; 0x31e <Lcd4_Cmd+0x3e>
 322:	00 c0       	rjmp	.+0      	; 0x324 <Lcd4_Cmd+0x44>
 324:	00 00       	nop
 326:	cf 91       	pop	r28
 328:	08 95       	ret

0000032a <Lcd4_Clear>:
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 336:	08 95       	ret

00000338 <Lcd4_Set_Cursor>:
 338:	cf 93       	push	r28
 33a:	c6 2f       	mov	r28, r22
 33c:	81 30       	cpi	r24, 0x01	; 1
 33e:	59 f4       	brne	.+22     	; 0x356 <Lcd4_Set_Cursor+0x1e>
 340:	80 e8       	ldi	r24, 0x80	; 128
 342:	86 0f       	add	r24, r22
 344:	82 95       	swap	r24
 346:	8f 70       	andi	r24, 0x0F	; 15
 348:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 34c:	8c 2f       	mov	r24, r28
 34e:	8f 70       	andi	r24, 0x0F	; 15
 350:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 354:	0c c0       	rjmp	.+24     	; 0x36e <Lcd4_Set_Cursor+0x36>
 356:	82 30       	cpi	r24, 0x02	; 2
 358:	51 f4       	brne	.+20     	; 0x36e <Lcd4_Set_Cursor+0x36>
 35a:	80 ec       	ldi	r24, 0xC0	; 192
 35c:	86 0f       	add	r24, r22
 35e:	82 95       	swap	r24
 360:	8f 70       	andi	r24, 0x0F	; 15
 362:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 366:	8c 2f       	mov	r24, r28
 368:	8f 70       	andi	r24, 0x0F	; 15
 36a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 36e:	cf 91       	pop	r28
 370:	08 95       	ret

00000372 <Lcd4_Init>:
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 30 01 	call	0x260	; 0x260 <Lcd4_Port>
 378:	2f ef       	ldi	r18, 0xFF	; 255
 37a:	89 ef       	ldi	r24, 0xF9	; 249
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	21 50       	subi	r18, 0x01	; 1
 380:	80 40       	sbci	r24, 0x00	; 0
 382:	90 40       	sbci	r25, 0x00	; 0
 384:	e1 f7       	brne	.-8      	; 0x37e <Lcd4_Init+0xc>
 386:	00 c0       	rjmp	.+0      	; 0x388 <Lcd4_Init+0x16>
 388:	00 00       	nop
 38a:	83 e0       	ldi	r24, 0x03	; 3
 38c:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 390:	8f e1       	ldi	r24, 0x1F	; 31
 392:	9e e4       	ldi	r25, 0x4E	; 78
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <Lcd4_Init+0x22>
 398:	00 c0       	rjmp	.+0      	; 0x39a <Lcd4_Init+0x28>
 39a:	00 00       	nop
 39c:	83 e0       	ldi	r24, 0x03	; 3
 39e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3a2:	8f ed       	ldi	r24, 0xDF	; 223
 3a4:	9b ea       	ldi	r25, 0xAB	; 171
 3a6:	01 97       	sbiw	r24, 0x01	; 1
 3a8:	f1 f7       	brne	.-4      	; 0x3a6 <Lcd4_Init+0x34>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <Lcd4_Init+0x3a>
 3ac:	00 00       	nop
 3ae:	83 e0       	ldi	r24, 0x03	; 3
 3b0:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3b4:	82 e0       	ldi	r24, 0x02	; 2
 3b6:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3ba:	82 e0       	ldi	r24, 0x02	; 2
 3bc:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3c0:	88 e0       	ldi	r24, 0x08	; 8
 3c2:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3cc:	8c e0       	ldi	r24, 0x0C	; 12
 3ce:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3d8:	86 e0       	ldi	r24, 0x06	; 6
 3da:	0e 94 70 01 	call	0x2e0	; 0x2e0 <Lcd4_Cmd>
 3de:	08 95       	ret

000003e0 <Lcd4_Write_Char>:
 3e0:	cf 93       	push	r28
 3e2:	c8 2f       	mov	r28, r24
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	8d e0       	ldi	r24, 0x0D	; 13
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 3f0:	8c 2f       	mov	r24, r28
 3f2:	82 95       	swap	r24
 3f4:	8f 70       	andi	r24, 0x0F	; 15
 3f6:	0e 94 30 01 	call	0x260	; 0x260 <Lcd4_Port>
 3fa:	61 e0       	ldi	r22, 0x01	; 1
 3fc:	70 e0       	ldi	r23, 0x00	; 0
 3fe:	8c e0       	ldi	r24, 0x0C	; 12
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 406:	8f e9       	ldi	r24, 0x9F	; 159
 408:	9f e0       	ldi	r25, 0x0F	; 15
 40a:	01 97       	sbiw	r24, 0x01	; 1
 40c:	f1 f7       	brne	.-4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 410:	00 00       	nop
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	8c e0       	ldi	r24, 0x0C	; 12
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 41e:	8f e9       	ldi	r24, 0x9F	; 159
 420:	9f e0       	ldi	r25, 0x0F	; 15
 422:	01 97       	sbiw	r24, 0x01	; 1
 424:	f1 f7       	brne	.-4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 426:	00 c0       	rjmp	.+0      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 428:	00 00       	nop
 42a:	8c 2f       	mov	r24, r28
 42c:	8f 70       	andi	r24, 0x0F	; 15
 42e:	0e 94 30 01 	call	0x260	; 0x260 <Lcd4_Port>
 432:	61 e0       	ldi	r22, 0x01	; 1
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	8c e0       	ldi	r24, 0x0C	; 12
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 43e:	8f e9       	ldi	r24, 0x9F	; 159
 440:	9f e0       	ldi	r25, 0x0F	; 15
 442:	01 97       	sbiw	r24, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 446:	00 c0       	rjmp	.+0      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 448:	00 00       	nop
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	8c e0       	ldi	r24, 0x0C	; 12
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 48 00 	call	0x90	; 0x90 <pinChange>
 456:	8f e9       	ldi	r24, 0x9F	; 159
 458:	9f e0       	ldi	r25, 0x0F	; 15
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 460:	00 00       	nop
 462:	cf 91       	pop	r28
 464:	08 95       	ret

00000466 <hardwareInitLCD>:
 466:	84 b1       	in	r24, 0x04	; 4
 468:	8c 60       	ori	r24, 0x0C	; 12
 46a:	84 b9       	out	0x04, r24	; 4
 46c:	80 ef       	ldi	r24, 0xF0	; 240
 46e:	8a b9       	out	0x0a, r24	; 10
 470:	08 95       	ret

00000472 <USART_Transmit>:
	/* Any other initializations should go here */
}

void USART_Transmit(unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));
 472:	e0 ec       	ldi	r30, 0xC0	; 192
 474:	f0 e0       	ldi	r31, 0x00	; 0
 476:	90 81       	ld	r25, Z
 478:	95 ff       	sbrs	r25, 5
 47a:	fd cf       	rjmp	.-6      	; 0x476 <USART_Transmit+0x4>
	UDR0=data;
 47c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 480:	08 95       	ret

00000482 <USART_Init>:
}

void USART_Init(unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H=(unsigned char)(ubrr>>8);
 482:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L=(unsigned char)ubrr;
 486:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	/*Enable receiver and transmitter*/
	UCSR0B=(1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
 48a:	88 e9       	ldi	r24, 0x98	; 152
 48c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/*Set frame format*/
	UCSR0C=(3<<UCSZ00);
 490:	86 e0       	ldi	r24, 0x06	; 6
 492:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	sei();
 496:	78 94       	sei
 498:	08 95       	ret

0000049a <__vector_18>:
	
	}
}

ISR(USART_RX_vect)
{
 49a:	1f 92       	push	r1
 49c:	0f 92       	push	r0
 49e:	0f b6       	in	r0, 0x3f	; 63
 4a0:	0f 92       	push	r0
 4a2:	11 24       	eor	r1, r1
 4a4:	8f 93       	push	r24
	rxFlag=1;
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <rxFlag>
	rxData=UDR0;
 4ac:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 4b0:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <rxData>
}
 4b4:	8f 91       	pop	r24
 4b6:	0f 90       	pop	r0
 4b8:	0f be       	out	0x3f, r0	; 63
 4ba:	0f 90       	pop	r0
 4bc:	1f 90       	pop	r1
 4be:	18 95       	reti

000004c0 <GPS_Convert>:

void GPS_Convert(unsigned char Gpsdata)
{
	if(finish == 0){
 4c0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <finish>
 4c4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <finish+0x1>
 4c8:	23 2b       	or	r18, r19
 4ca:	09 f0       	breq	.+2      	; 0x4ce <GPS_Convert+0xe>
 4cc:	ee c0       	rjmp	.+476    	; 0x6aa <GPS_Convert+0x1ea>
		if( Gpsdata=='$' && pos_cnt == 0)  // finding GPRMC header
 4ce:	84 32       	cpi	r24, 0x24	; 36
 4d0:	69 f4       	brne	.+26     	; 0x4ec <GPS_Convert+0x2c>
 4d2:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 4d6:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 4da:	23 2b       	or	r18, r19
 4dc:	39 f5       	brne	.+78     	; 0x52c <GPS_Convert+0x6c>
		pos_cnt=1;
 4de:	21 e0       	ldi	r18, 0x01	; 1
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <pos_cnt+0x1>
 4e6:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <pos_cnt>
 4ea:	20 c0       	rjmp	.+64     	; 0x52c <GPS_Convert+0x6c>
		if( Gpsdata=='G' && pos_cnt == 1)
 4ec:	87 34       	cpi	r24, 0x47	; 71
 4ee:	71 f4       	brne	.+28     	; 0x50c <GPS_Convert+0x4c>
 4f0:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 4f4:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 4f8:	21 30       	cpi	r18, 0x01	; 1
 4fa:	31 05       	cpc	r19, r1
 4fc:	39 f5       	brne	.+78     	; 0x54c <GPS_Convert+0x8c>
		pos_cnt=2;
 4fe:	22 e0       	ldi	r18, 0x02	; 2
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <pos_cnt+0x1>
 506:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <pos_cnt>
 50a:	20 c0       	rjmp	.+64     	; 0x54c <GPS_Convert+0x8c>
		if( Gpsdata=='P' && pos_cnt == 2)
 50c:	80 35       	cpi	r24, 0x50	; 80
 50e:	71 f4       	brne	.+28     	; 0x52c <GPS_Convert+0x6c>
 510:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 514:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 518:	22 30       	cpi	r18, 0x02	; 2
 51a:	31 05       	cpc	r19, r1
 51c:	39 f5       	brne	.+78     	; 0x56c <GPS_Convert+0xac>
		pos_cnt=3;
 51e:	23 e0       	ldi	r18, 0x03	; 3
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <pos_cnt+0x1>
 526:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <pos_cnt>
 52a:	20 c0       	rjmp	.+64     	; 0x56c <GPS_Convert+0xac>
		if( Gpsdata=='R' && pos_cnt == 3)
 52c:	82 35       	cpi	r24, 0x52	; 82
 52e:	71 f4       	brne	.+28     	; 0x54c <GPS_Convert+0x8c>
 530:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 534:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 538:	23 30       	cpi	r18, 0x03	; 3
 53a:	31 05       	cpc	r19, r1
 53c:	39 f5       	brne	.+78     	; 0x58c <GPS_Convert+0xcc>
		pos_cnt=4;
 53e:	24 e0       	ldi	r18, 0x04	; 4
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <pos_cnt+0x1>
 546:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <pos_cnt>
 54a:	20 c0       	rjmp	.+64     	; 0x58c <GPS_Convert+0xcc>
		if( Gpsdata=='M' && pos_cnt == 4)
 54c:	8d 34       	cpi	r24, 0x4D	; 77
 54e:	71 f4       	brne	.+28     	; 0x56c <GPS_Convert+0xac>
 550:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 554:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 558:	24 30       	cpi	r18, 0x04	; 4
 55a:	31 05       	cpc	r19, r1
 55c:	91 f5       	brne	.+100    	; 0x5c2 <GPS_Convert+0x102>
		pos_cnt=5;
 55e:	25 e0       	ldi	r18, 0x05	; 5
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <pos_cnt+0x1>
 566:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <pos_cnt>
 56a:	2b c0       	rjmp	.+86     	; 0x5c2 <GPS_Convert+0x102>
		if(Gpsdata=='C'  &&  pos_cnt == 5 )
 56c:	83 34       	cpi	r24, 0x43	; 67
 56e:	71 f4       	brne	.+28     	; 0x58c <GPS_Convert+0xcc>
 570:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 574:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 578:	25 30       	cpi	r18, 0x05	; 5
 57a:	31 05       	cpc	r19, r1
 57c:	11 f5       	brne	.+68     	; 0x5c2 <GPS_Convert+0x102>
		pos_cnt=6;
 57e:	26 e0       	ldi	r18, 0x06	; 6
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <pos_cnt+0x1>
 586:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <pos_cnt>
 58a:	1b c0       	rjmp	.+54     	; 0x5c2 <GPS_Convert+0x102>
		if(pos_cnt==6    &&  Gpsdata ==','){  // count commas in message
 58c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <pos_cnt>
 590:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <pos_cnt+0x1>
 594:	26 30       	cpi	r18, 0x06	; 6
 596:	31 05       	cpc	r19, r1
 598:	a1 f4       	brne	.+40     	; 0x5c2 <GPS_Convert+0x102>
 59a:	8c 32       	cpi	r24, 0x2C	; 44
 59c:	91 f4       	brne	.+36     	; 0x5c2 <GPS_Convert+0x102>
			com_cnt++;
 59e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 5a2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 5a6:	2f 5f       	subi	r18, 0xFF	; 255
 5a8:	3f 4f       	sbci	r19, 0xFF	; 255
 5aa:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <_edata+0x1>
 5ae:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
			flg=0;
 5b2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <flg+0x1>
 5b6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flg>
		}
		
		if(com_cnt==3 && flg==1){
 5ba:	23 30       	cpi	r18, 0x03	; 3
 5bc:	31 05       	cpc	r19, r1
 5be:	21 f5       	brne	.+72     	; 0x608 <GPS_Convert+0x148>
 5c0:	08 95       	ret
 5c2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 5c6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 5ca:	23 30       	cpi	r18, 0x03	; 3
 5cc:	31 05       	cpc	r19, r1
 5ce:	e1 f4       	brne	.+56     	; 0x608 <GPS_Convert+0x148>
 5d0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <flg>
 5d4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <flg+0x1>
 5d8:	21 30       	cpi	r18, 0x01	; 1
 5da:	31 05       	cpc	r19, r1
 5dc:	09 f0       	breq	.+2      	; 0x5e0 <GPS_Convert+0x120>
 5de:	65 c0       	rjmp	.+202    	; 0x6aa <GPS_Convert+0x1ea>
			lat[lat_cnt++] =  Gpsdata;        // latitude
 5e0:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <lat_cnt>
 5e4:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <lat_cnt+0x1>
 5e8:	a9 01       	movw	r20, r18
 5ea:	4f 5f       	subi	r20, 0xFF	; 255
 5ec:	5f 4f       	sbci	r21, 0xFF	; 255
 5ee:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <lat_cnt+0x1>
 5f2:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <lat_cnt>
 5f6:	f9 01       	movw	r30, r18
 5f8:	ed 5d       	subi	r30, 0xDD	; 221
 5fa:	fe 4f       	sbci	r31, 0xFE	; 254
 5fc:	80 83       	st	Z, r24
			flg=0;
 5fe:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <flg+0x1>
 602:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flg>
 606:	08 95       	ret
		}
		
		if(com_cnt==5 && flg==1){
 608:	25 30       	cpi	r18, 0x05	; 5
 60a:	31 05       	cpc	r19, r1
 60c:	e1 f4       	brne	.+56     	; 0x646 <GPS_Convert+0x186>
 60e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <flg>
 612:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <flg+0x1>
 616:	21 30       	cpi	r18, 0x01	; 1
 618:	31 05       	cpc	r19, r1
 61a:	09 f0       	breq	.+2      	; 0x61e <GPS_Convert+0x15e>
 61c:	44 c0       	rjmp	.+136    	; 0x6a6 <GPS_Convert+0x1e6>
			lg[log_cnt++] =  Gpsdata;        // longitude
 61e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <log_cnt>
 622:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <log_cnt+0x1>
 626:	a9 01       	movw	r20, r18
 628:	4f 5f       	subi	r20, 0xFF	; 255
 62a:	5f 4f       	sbci	r21, 0xFF	; 255
 62c:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <log_cnt+0x1>
 630:	40 93 04 01 	sts	0x0104, r20	; 0x800104 <log_cnt>
 634:	f9 01       	movw	r30, r18
 636:	e1 5f       	subi	r30, 0xF1	; 241
 638:	fe 4f       	sbci	r31, 0xFE	; 254
 63a:	80 83       	st	Z, r24
			flg=0;
 63c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <flg+0x1>
 640:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flg>
 644:	30 c0       	rjmp	.+96     	; 0x6a6 <GPS_Convert+0x1e6>
		}
		
		if( Gpsdata == '*' && com_cnt >= 5 && flg == 1){
 646:	8a 32       	cpi	r24, 0x2A	; 42
 648:	81 f5       	brne	.+96     	; 0x6aa <GPS_Convert+0x1ea>
 64a:	25 30       	cpi	r18, 0x05	; 5
 64c:	31 05       	cpc	r19, r1
 64e:	68 f1       	brcs	.+90     	; 0x6aa <GPS_Convert+0x1ea>
 650:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <flg>
 654:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <flg+0x1>
 658:	01 97       	sbiw	r24, 0x01	; 1
 65a:	39 f5       	brne	.+78     	; 0x6aa <GPS_Convert+0x1ea>
			lat[lat_cnt] ='\0';             // end of GPRMC message
 65c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <lat_cnt>
 660:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <lat_cnt+0x1>
 664:	ed 5d       	subi	r30, 0xDD	; 221
 666:	fe 4f       	sbci	r31, 0xFE	; 254
 668:	10 82       	st	Z, r1
			lg[log_cnt]  = '\0';
 66a:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <log_cnt>
 66e:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <log_cnt+0x1>
 672:	e1 5f       	subi	r30, 0xF1	; 241
 674:	fe 4f       	sbci	r31, 0xFE	; 254
 676:	10 82       	st	Z, r1
			lat_cnt = 0;
 678:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <lat_cnt+0x1>
 67c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <lat_cnt>
			log_cnt = 0;
 680:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <log_cnt+0x1>
 684:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <log_cnt>
			flg     = 0;
 688:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <flg+0x1>
 68c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flg>
			finish  = 1;
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <finish+0x1>
 698:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <finish>
			com_cnt = 0;
 69c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 6a0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
			
		}
	}

 6a4:	08 95       	ret
		if(com_cnt==5 && flg==1){
			lg[log_cnt++] =  Gpsdata;        // longitude
			flg=0;
		}
		
		if( Gpsdata == '*' && com_cnt >= 5 && flg == 1){
 6a6:	8a 32       	cpi	r24, 0x2A	; 42
 6a8:	99 f2       	breq	.-90     	; 0x650 <GPS_Convert+0x190>
 6aa:	08 95       	ret

000006ac <main>:
/****************************************************/
/*			Initialize all the hardware				*/
/****************************************************/
void hardwareInit(void)
{
	hardwareInitLCD();
 6ac:	0e 94 33 02 	call	0x466	; 0x466 <hardwareInitLCD>

int main(void)
{
	
	hardwareInit();			// Initialize all hardware for LCD and other required peripherals
	USART_Init(MYUBRR);  //Initialize USART
 6b0:	87 e6       	ldi	r24, 0x67	; 103
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 94 41 02 	call	0x482	; 0x482 <USART_Init>
	Lcd4_Init();			// LCD specific software initializations
 6b8:	0e 94 b9 01 	call	0x372	; 0x372 <Lcd4_Init>
	Lcd4_Clear();	
 6bc:	0e 94 95 01 	call	0x32a	; 0x32a <Lcd4_Clear>
	Lcd4_Set_Cursor(1,1);	// Set the cursor to first row first column
 6c0:	61 e0       	ldi	r22, 0x01	; 1
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	0e 94 9c 01 	call	0x338	; 0x338 <Lcd4_Set_Cursor>
		if(rxFlag)
		{
			rxFlag=0;
			GPS_Convert(rxData);
											
			Lcd4_Write_Char(lat);
 6c8:	c3 e2       	ldi	r28, 0x23	; 35
 6ca:	d1 e0       	ldi	r29, 0x01	; 1
	Lcd4_Clear();	
	Lcd4_Set_Cursor(1,1);	// Set the cursor to first row first column
		
	while (1)
	{
		if(rxFlag)
 6cc:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <rxFlag>
 6d0:	88 23       	and	r24, r24
 6d2:	e1 f3       	breq	.-8      	; 0x6cc <main+0x20>
		{
			rxFlag=0;
 6d4:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <rxFlag>
			GPS_Convert(rxData);
 6d8:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <rxData>
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 60 02 	call	0x4c0	; 0x4c0 <GPS_Convert>
											
			Lcd4_Write_Char(lat);
 6e2:	8c 2f       	mov	r24, r28
 6e4:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Write_Char>
			USART_Transmit(lat);
 6e8:	8c 2f       	mov	r24, r28
 6ea:	0e 94 39 02 	call	0x472	; 0x472 <USART_Transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ee:	2f ef       	ldi	r18, 0xFF	; 255
 6f0:	83 ed       	ldi	r24, 0xD3	; 211
 6f2:	90 e3       	ldi	r25, 0x30	; 48
 6f4:	21 50       	subi	r18, 0x01	; 1
 6f6:	80 40       	sbci	r24, 0x00	; 0
 6f8:	90 40       	sbci	r25, 0x00	; 0
 6fa:	e1 f7       	brne	.-8      	; 0x6f4 <main+0x48>
 6fc:	00 c0       	rjmp	.+0      	; 0x6fe <main+0x52>
 6fe:	00 00       	nop
 700:	e5 cf       	rjmp	.-54     	; 0x6cc <main+0x20>

00000702 <_exit>:
 702:	f8 94       	cli

00000704 <__stop_program>:
 704:	ff cf       	rjmp	.-2      	; 0x704 <__stop_program>
